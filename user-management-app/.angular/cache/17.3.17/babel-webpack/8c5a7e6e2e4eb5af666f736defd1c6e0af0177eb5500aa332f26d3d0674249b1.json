{"ast":null,"code":"import { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class UserService {\n  constructor() {\n    this.users = [{\n      id: 1,\n      name: 'John Doe',\n      email: 'john.doe@example.com',\n      status: 'active',\n      group: 'Administrators',\n      role: 'Admin',\n      joinDate: '2023-01-15',\n      lastLogin: '2024-08-13 09:30:00',\n      avatar: 'https://ui-avatars.com/api/?name=John+Doe&background=007bff&color=fff'\n    }, {\n      id: 2,\n      name: 'Jane Smith',\n      email: 'jane.smith@example.com',\n      status: 'active',\n      group: 'Developers',\n      role: 'Senior Developer',\n      joinDate: '2023-02-20',\n      lastLogin: '2024-08-12 16:45:00',\n      avatar: 'https://ui-avatars.com/api/?name=Jane+Smith&background=28a745&color=fff'\n    }, {\n      id: 3,\n      name: 'Mike Johnson',\n      email: 'mike.johnson@example.com',\n      status: 'inactive',\n      group: 'Support',\n      role: 'Support Agent',\n      joinDate: '2023-03-10',\n      lastLogin: '2024-08-10 14:20:00',\n      avatar: 'https://ui-avatars.com/api/?name=Mike+Johnson&background=dc3545&color=fff'\n    }, {\n      id: 4,\n      name: 'Sarah Wilson',\n      email: 'sarah.wilson@example.com',\n      status: 'active',\n      group: 'Developers',\n      role: 'Frontend Developer',\n      joinDate: '2023-04-05',\n      lastLogin: '2024-08-13 08:15:00',\n      avatar: 'https://ui-avatars.com/api/?name=Sarah+Wilson&background=ffc107&color=000'\n    }, {\n      id: 5,\n      name: 'David Brown',\n      email: 'david.brown@example.com',\n      status: 'active',\n      group: 'Administrators',\n      role: 'System Admin',\n      joinDate: '2023-05-12',\n      lastLogin: '2024-08-13 07:00:00',\n      avatar: 'https://ui-avatars.com/api/?name=David+Brown&background=6f42c1&color=fff'\n    }, {\n      id: 6,\n      name: 'Emily Davis',\n      email: 'emily.davis@example.com',\n      status: 'inactive',\n      group: 'Support',\n      role: 'Customer Success',\n      joinDate: '2023-06-18',\n      lastLogin: '2024-08-09 12:30:00',\n      avatar: 'https://ui-avatars.com/api/?name=Emily+Davis&background=e83e8c&color=fff'\n    }, {\n      id: 7,\n      name: 'Robert Taylor',\n      email: 'robert.taylor@example.com',\n      status: 'active',\n      group: 'Developers',\n      role: 'Backend Developer',\n      joinDate: '2023-07-22',\n      lastLogin: '2024-08-13 10:45:00',\n      avatar: 'https://ui-avatars.com/api/?name=Robert+Taylor&background=20c997&color=fff'\n    }, {\n      id: 8,\n      name: 'Lisa Anderson',\n      email: 'lisa.anderson@example.com',\n      status: 'active',\n      group: 'Administrators',\n      role: 'Project Manager',\n      joinDate: '2023-08-30',\n      lastLogin: '2024-08-13 11:20:00',\n      avatar: 'https://ui-avatars.com/api/?name=Lisa+Anderson&background=fd7e14&color=fff'\n    }, {\n      id: 9,\n      name: 'Chris Martinez',\n      email: 'chris.martinez@example.com',\n      status: 'active',\n      group: 'Support',\n      role: 'Technical Support',\n      joinDate: '2023-09-14',\n      lastLogin: '2024-08-12 17:30:00',\n      avatar: 'https://ui-avatars.com/api/?name=Chris+Martinez&background=6610f2&color=fff'\n    }, {\n      id: 10,\n      name: 'Amanda White',\n      email: 'amanda.white@example.com',\n      status: 'inactive',\n      group: 'Developers',\n      role: 'UI/UX Designer',\n      joinDate: '2023-10-08',\n      lastLogin: '2024-08-11 13:15:00',\n      avatar: 'https://ui-avatars.com/api/?name=Amanda+White&background=d63384&color=fff'\n    }, {\n      id: 11,\n      name: 'Kevin Garcia',\n      email: 'kevin.garcia@example.com',\n      status: 'active',\n      group: 'Developers',\n      role: 'Full Stack Developer',\n      joinDate: '2023-11-20',\n      lastLogin: '2024-08-13 09:00:00',\n      avatar: 'https://ui-avatars.com/api/?name=Kevin+Garcia&background=198754&color=fff'\n    }, {\n      id: 12,\n      name: 'Michelle Lee',\n      email: 'michelle.lee@example.com',\n      status: 'active',\n      group: 'Support',\n      role: 'Quality Assurance',\n      joinDate: '2023-12-03',\n      lastLogin: '2024-08-13 08:45:00',\n      avatar: 'https://ui-avatars.com/api/?name=Michelle+Lee&background=0dcaf0&color=000'\n    }];\n    this.groups = [{\n      id: 1,\n      name: 'Administrators',\n      description: 'System administrators with full access'\n    }, {\n      id: 2,\n      name: 'Developers',\n      description: 'Development team members'\n    }, {\n      id: 3,\n      name: 'Support',\n      description: 'Customer support and QA team'\n    }];\n  }\n  getUsers() {\n    return of(this.users);\n  }\n  getGroups() {\n    return of(this.groups);\n  }\n  updateUserStatus(userId, status) {\n    const user = this.users.find(u => u.id === userId);\n    if (user) {\n      user.status = status;\n      return of(true);\n    }\n    return of(false);\n  }\n  updateUserGroup(userId, groupName) {\n    const user = this.users.find(u => u.id === userId);\n    if (user) {\n      user.group = groupName;\n      return of(true);\n    }\n    return of(false);\n  }\n  deleteUser(userId) {\n    const index = this.users.findIndex(u => u.id === userId);\n    if (index > -1) {\n      this.users.splice(index, 1);\n      return of(true);\n    }\n    return of(false);\n  }\n  createUser(user) {\n    const newUser = {\n      ...user,\n      id: Math.max(...this.users.map(u => u.id)) + 1,\n      avatar: `https://ui-avatars.com/api/?name=${encodeURIComponent(user.name)}&background=007bff&color=fff`\n    };\n    this.users.push(newUser);\n    return of(newUser);\n  }\n  static {\n    this.ɵfac = function UserService_Factory(t) {\n      return new (t || UserService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UserService,\n      factory: UserService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["of","UserService","constructor","users","id","name","email","status","group","role","joinDate","lastLogin","avatar","groups","description","getUsers","getGroups","updateUserStatus","userId","user","find","u","updateUserGroup","groupName","deleteUser","index","findIndex","splice","createUser","newUser","Math","max","map","encodeURIComponent","push","factory","ɵfac","providedIn"],"sources":["C:\\Users\\SeanCheahSiongYuen\\source\\repos\\usermanagement-mock\\user-management-app\\src\\app\\services\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { User, Group } from '../models/user.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  private users: User[] = [\r\n    {\r\n      id: 1,\r\n      name: 'John Doe',\r\n      email: 'john.doe@example.com',\r\n      status: 'active',\r\n      group: 'Administrators',\r\n      role: 'Admin',\r\n      joinDate: '2023-01-15',\r\n      lastLogin: '2024-08-13 09:30:00',\r\n      avatar: 'https://ui-avatars.com/api/?name=John+Doe&background=007bff&color=fff'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Jane Smith',\r\n      email: 'jane.smith@example.com',\r\n      status: 'active',\r\n      group: 'Developers',\r\n      role: 'Senior Developer',\r\n      joinDate: '2023-02-20',\r\n      lastLogin: '2024-08-12 16:45:00',\r\n      avatar: 'https://ui-avatars.com/api/?name=Jane+Smith&background=28a745&color=fff'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Mike Johnson',\r\n      email: 'mike.johnson@example.com',\r\n      status: 'inactive',\r\n      group: 'Support',\r\n      role: 'Support Agent',\r\n      joinDate: '2023-03-10',\r\n      lastLogin: '2024-08-10 14:20:00',\r\n      avatar: 'https://ui-avatars.com/api/?name=Mike+Johnson&background=dc3545&color=fff'\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Sarah Wilson',\r\n      email: 'sarah.wilson@example.com',\r\n      status: 'active',\r\n      group: 'Developers',\r\n      role: 'Frontend Developer',\r\n      joinDate: '2023-04-05',\r\n      lastLogin: '2024-08-13 08:15:00',\r\n      avatar: 'https://ui-avatars.com/api/?name=Sarah+Wilson&background=ffc107&color=000'\r\n    },\r\n    {\r\n      id: 5,\r\n      name: 'David Brown',\r\n      email: 'david.brown@example.com',\r\n      status: 'active',\r\n      group: 'Administrators',\r\n      role: 'System Admin',\r\n      joinDate: '2023-05-12',\r\n      lastLogin: '2024-08-13 07:00:00',\r\n      avatar: 'https://ui-avatars.com/api/?name=David+Brown&background=6f42c1&color=fff'\r\n    },\r\n    {\r\n      id: 6,\r\n      name: 'Emily Davis',\r\n      email: 'emily.davis@example.com',\r\n      status: 'inactive',\r\n      group: 'Support',\r\n      role: 'Customer Success',\r\n      joinDate: '2023-06-18',\r\n      lastLogin: '2024-08-09 12:30:00',\r\n      avatar: 'https://ui-avatars.com/api/?name=Emily+Davis&background=e83e8c&color=fff'\r\n    },\r\n    {\r\n      id: 7,\r\n      name: 'Robert Taylor',\r\n      email: 'robert.taylor@example.com',\r\n      status: 'active',\r\n      group: 'Developers',\r\n      role: 'Backend Developer',\r\n      joinDate: '2023-07-22',\r\n      lastLogin: '2024-08-13 10:45:00',\r\n      avatar: 'https://ui-avatars.com/api/?name=Robert+Taylor&background=20c997&color=fff'\r\n    },\r\n    {\r\n      id: 8,\r\n      name: 'Lisa Anderson',\r\n      email: 'lisa.anderson@example.com',\r\n      status: 'active',\r\n      group: 'Administrators',\r\n      role: 'Project Manager',\r\n      joinDate: '2023-08-30',\r\n      lastLogin: '2024-08-13 11:20:00',\r\n      avatar: 'https://ui-avatars.com/api/?name=Lisa+Anderson&background=fd7e14&color=fff'\r\n    },\r\n    {\r\n      id: 9,\r\n      name: 'Chris Martinez',\r\n      email: 'chris.martinez@example.com',\r\n      status: 'active',\r\n      group: 'Support',\r\n      role: 'Technical Support',\r\n      joinDate: '2023-09-14',\r\n      lastLogin: '2024-08-12 17:30:00',\r\n      avatar: 'https://ui-avatars.com/api/?name=Chris+Martinez&background=6610f2&color=fff'\r\n    },\r\n    {\r\n      id: 10,\r\n      name: 'Amanda White',\r\n      email: 'amanda.white@example.com',\r\n      status: 'inactive',\r\n      group: 'Developers',\r\n      role: 'UI/UX Designer',\r\n      joinDate: '2023-10-08',\r\n      lastLogin: '2024-08-11 13:15:00',\r\n      avatar: 'https://ui-avatars.com/api/?name=Amanda+White&background=d63384&color=fff'\r\n    },\r\n    {\r\n      id: 11,\r\n      name: 'Kevin Garcia',\r\n      email: 'kevin.garcia@example.com',\r\n      status: 'active',\r\n      group: 'Developers',\r\n      role: 'Full Stack Developer',\r\n      joinDate: '2023-11-20',\r\n      lastLogin: '2024-08-13 09:00:00',\r\n      avatar: 'https://ui-avatars.com/api/?name=Kevin+Garcia&background=198754&color=fff'\r\n    },\r\n    {\r\n      id: 12,\r\n      name: 'Michelle Lee',\r\n      email: 'michelle.lee@example.com',\r\n      status: 'active',\r\n      group: 'Support',\r\n      role: 'Quality Assurance',\r\n      joinDate: '2023-12-03',\r\n      lastLogin: '2024-08-13 08:45:00',\r\n      avatar: 'https://ui-avatars.com/api/?name=Michelle+Lee&background=0dcaf0&color=000'\r\n    }\r\n  ];\r\n\r\n  private groups: Group[] = [\r\n    {\r\n      id: 1,\r\n      name: 'Administrators',\r\n      description: 'System administrators with full access'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Developers',\r\n      description: 'Development team members'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Support',\r\n      description: 'Customer support and QA team'\r\n    }\r\n  ];\r\n\r\n  getUsers(): Observable<User[]> {\r\n    return of(this.users);\r\n  }\r\n\r\n  getGroups(): Observable<Group[]> {\r\n    return of(this.groups);\r\n  }\r\n\r\n  updateUserStatus(userId: number, status: 'active' | 'inactive'): Observable<boolean> {\r\n    const user = this.users.find(u => u.id === userId);\r\n    if (user) {\r\n      user.status = status;\r\n      return of(true);\r\n    }\r\n    return of(false);\r\n  }\r\n\r\n  updateUserGroup(userId: number, groupName: string): Observable<boolean> {\r\n    const user = this.users.find(u => u.id === userId);\r\n    if (user) {\r\n      user.group = groupName;\r\n      return of(true);\r\n    }\r\n    return of(false);\r\n  }\r\n\r\n  deleteUser(userId: number): Observable<boolean> {\r\n    const index = this.users.findIndex(u => u.id === userId);\r\n    if (index > -1) {\r\n      this.users.splice(index, 1);\r\n      return of(true);\r\n    }\r\n    return of(false);\r\n  }\r\n\r\n  createUser(user: Omit<User, 'id'>): Observable<User> {\r\n    const newUser: User = {\r\n      ...user,\r\n      id: Math.max(...this.users.map(u => u.id)) + 1,\r\n      avatar: `https://ui-avatars.com/api/?name=${encodeURIComponent(user.name)}&background=007bff&color=fff`\r\n    };\r\n    this.users.push(newUser);\r\n    return of(newUser);\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}