{"ast":null,"code":"import { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor() {\n      this.users = [{\n        id: 1,\n        name: 'John Doe',\n        email: 'john.doe@example.com',\n        status: 'active',\n        groups: ['Portal Administrator'],\n        joinDate: '2023-01-15',\n        lastLogin: '2024-08-13 09:30:00',\n        avatar: 'https://ui-avatars.com/api/?name=John+Doe&background=007bff&color=fff'\n      }, {\n        id: 2,\n        name: 'Jane Smith',\n        email: 'jane.smith@example.com',\n        status: 'active',\n        groups: ['Portal Administrator', 'Portal User'],\n        joinDate: '2023-02-20',\n        lastLogin: '2024-08-12 16:45:00',\n        avatar: 'https://ui-avatars.com/api/?name=Jane+Smith&background=28a745&color=fff'\n      }, {\n        id: 3,\n        name: 'Mike Johnson',\n        email: 'mike.johnson@example.com',\n        status: 'inactive',\n        groups: ['Portal User'],\n        joinDate: '2023-03-10',\n        lastLogin: '2024-08-10 14:20:00',\n        avatar: 'https://ui-avatars.com/api/?name=Mike+Johnson&background=dc3545&color=fff'\n      }, {\n        id: 4,\n        name: 'Sarah Wilson',\n        email: 'sarah.wilson@example.com',\n        status: 'active',\n        groups: ['Portal User'],\n        joinDate: '2023-04-05',\n        lastLogin: '2024-08-13 08:15:00',\n        avatar: 'https://ui-avatars.com/api/?name=Sarah+Wilson&background=ffc107&color=000'\n      }, {\n        id: 5,\n        name: 'David Brown',\n        email: 'david.brown@example.com',\n        status: 'active',\n        groups: ['Portal Administrator'],\n        joinDate: '2023-05-12',\n        lastLogin: '2024-08-13 07:00:00',\n        avatar: 'https://ui-avatars.com/api/?name=David+Brown&background=6f42c1&color=fff'\n      }, {\n        id: 6,\n        name: 'Emily Davis',\n        email: 'emily.davis@example.com',\n        status: 'inactive',\n        groups: ['Portal User'],\n        joinDate: '2023-06-18',\n        lastLogin: '2024-08-09 12:30:00',\n        avatar: 'https://ui-avatars.com/api/?name=Emily+Davis&background=e83e8c&color=fff'\n      }, {\n        id: 7,\n        name: 'Robert Taylor',\n        email: 'robert.taylor@example.com',\n        status: 'active',\n        groups: ['Portal User'],\n        joinDate: '2023-07-22',\n        lastLogin: '2024-08-13 10:45:00',\n        avatar: 'https://ui-avatars.com/api/?name=Robert+Taylor&background=20c997&color=fff'\n      }, {\n        id: 8,\n        name: 'Lisa Anderson',\n        email: 'lisa.anderson@example.com',\n        status: 'active',\n        groups: ['Portal Administrator', 'Portal User'],\n        joinDate: '2023-08-30',\n        lastLogin: '2024-08-13 11:20:00',\n        avatar: 'https://ui-avatars.com/api/?name=Lisa+Anderson&background=fd7e14&color=fff'\n      }, {\n        id: 9,\n        name: 'Chris Martinez',\n        email: 'chris.martinez@example.com',\n        status: 'active',\n        groups: ['Portal User'],\n        joinDate: '2023-09-14',\n        lastLogin: '2024-08-12 17:30:00',\n        avatar: 'https://ui-avatars.com/api/?name=Chris+Martinez&background=6610f2&color=fff'\n      }, {\n        id: 10,\n        name: 'Amanda White',\n        email: 'amanda.white@example.com',\n        status: 'inactive',\n        groups: ['Portal User'],\n        joinDate: '2023-10-08',\n        lastLogin: '2024-08-11 13:15:00',\n        avatar: 'https://ui-avatars.com/api/?name=Amanda+White&background=d63384&color=fff'\n      }, {\n        id: 11,\n        name: 'Kevin Garcia',\n        email: 'kevin.garcia@example.com',\n        status: 'active',\n        groups: ['Portal Administrator'],\n        joinDate: '2023-11-20',\n        lastLogin: '2024-08-13 09:00:00',\n        avatar: 'https://ui-avatars.com/api/?name=Kevin+Garcia&background=198754&color=fff'\n      }, {\n        id: 12,\n        name: 'Michelle Lee',\n        email: 'michelle.lee@example.com',\n        status: 'active',\n        groups: ['Portal User'],\n        joinDate: '2023-12-03',\n        lastLogin: '2024-08-13 08:45:00',\n        avatar: 'https://ui-avatars.com/api/?name=Michelle+Lee&background=0dcaf0&color=000'\n      }];\n      this.groups = [{\n        id: 1,\n        name: 'Portal Administrator',\n        description: 'Full administrative access to the portal'\n      }, {\n        id: 2,\n        name: 'Portal User',\n        description: 'Standard user access to the portal'\n      }];\n    }\n    getUsers() {\n      return of(this.users);\n    }\n    getGroups() {\n      return of(this.groups);\n    }\n    updateUserStatus(userId, status) {\n      const user = this.users.find(u => u.id === userId);\n      if (user) {\n        user.status = status;\n        return of(true);\n      }\n      return of(false);\n    }\n    updateUserGroup(userId, groupName) {\n      const user = this.users.find(u => u.id === userId);\n      if (user) {\n        // Toggle group membership instead of replacing\n        if (user.groups.includes(groupName)) {\n          user.groups = user.groups.filter(g => g !== groupName);\n        } else {\n          user.groups.push(groupName);\n        }\n        return of(true);\n      }\n      return of(false);\n    }\n    updateUserGroups(userId, groups) {\n      const user = this.users.find(u => u.id === userId);\n      if (user) {\n        user.groups = [...groups];\n        return of(true);\n      }\n      return of(false);\n    }\n    deleteUser(userId) {\n      const index = this.users.findIndex(u => u.id === userId);\n      if (index > -1) {\n        this.users.splice(index, 1);\n        return of(true);\n      }\n      return of(false);\n    }\n    createUser(user) {\n      const newUser = {\n        ...user,\n        id: Math.max(...this.users.map(u => u.id)) + 1,\n        avatar: `https://ui-avatars.com/api/?name=${encodeURIComponent(user.name)}&background=007bff&color=fff`\n      };\n      this.users.push(newUser);\n      return of(newUser);\n    }\n    static {\n      this.ɵfac = function UserService_Factory(t) {\n        return new (t || UserService)();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: UserService,\n        factory: UserService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}